{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","listOfGoods","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","unSorted","className","type","cn","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdG,EAtCH,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNM,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKb,EAASgB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EAgBeS,CAAkBlB,EAAiBM,KAAKJ,OACtDiB,GAAYhB,GAAcC,IAAaL,EAASM,KAEtD,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAaL,EAASc,WAEpCU,QAAS,WACP,EAAKC,SAAS,CAAEpB,SAAUL,EAASc,YANvC,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAaL,EAASgB,SAEpCQ,QAAS,WACP,EAAKC,SAAS,CAAEpB,SAAUL,EAASgB,UANvC,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAA2B,IAAfnB,IAEdoB,QAAS,WACP,EAAKC,UAAS,SAACtB,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBAPzB,sBAeGgB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKC,SAAS,CACZrB,YAAY,EACZC,SAAUL,EAASM,QANzB,sBAgBN,6BAEIE,EAAYkB,KAAI,SAAAC,GAAI,OAClB,oBACE,UAAQ,OADV,SAIGA,GAFIA,eA3ErB,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.27c0e2eb.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const listOfGoods = getReorderedGoods(goodsFromServer, this.state);\n    const unSorted = !isReversed && sortType === SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={() => {\n              this.setState({ sortType: SortType.ALPHABET });\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={() => {\n              this.setState({ sortType: SortType.LENGTH });\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', {\n              'is-light': isReversed === false,\n            })}\n            onClick={() => {\n              this.setState((state) => ({\n                isReversed: !state.isReversed,\n              }));\n            }}\n          >\n            Reverse\n          </button>\n\n          {\n            !unSorted && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  this.setState({\n                    isReversed: false,\n                    sortType: SortType.NONE,\n                  });\n                }}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          {\n            listOfGoods.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}